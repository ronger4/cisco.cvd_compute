---
- name: Run FI query for Multiple Ports
  ansible.builtin.include_tasks: ./fi_port_query.yml
  when: ports is defined or port_range is defined
  register: ucs_fi_pre_provision_check_result

- name: Count Available and Used Ports
  ansible.builtin.set_fact:
    ucs_fi_pre_provision_check_total_ports: "{{ ucs_fi_port_query_filtered_ports | length }}"
    ucs_fi_pre_provision_check_available_ports: "{{ ucs_fi_port_query_filtered_ports | selectattr('role', 'equalto', 'unknown') | list | length }}"
    ucs_fi_pre_provision_check_used_ports: "{{ ucs_fi_port_query_filtered_ports | rejectattr('role', 'equalto', 'unknown') | list | length }}"

- name: Fail if No Available Ports
  ansible.builtin.fail:
    msg: |
      Provisioning cannot be proceeded for {{ current_fi }}.
      Total queried ports: {{ ucs_fi_pre_provision_check_total_ports }}
      Available ports     : {{ ucs_fi_pre_provision_check_available_ports }}
      
      Please check the Fabric Interconnect configuration and ensure all required ports are available.
  when: ucs_fi_pre_provision_check_available_ports | int != ucs_fi_pre_provision_check_total_ports | int

- name: Append provisioning success info to summary
  set_fact:
    ucs_fi_provisioning_summary: "{{ ucs_fi_provisioning_summary + [ summary_entry ] }}"
  vars:
    summary_entry:
      fi_name: "{{ current_fi }}"
      total_ports: "{{ ucs_fi_pre_provision_check_total_ports }}"
      available_ports: "{{ ucs_fi_pre_provision_check_available_ports }}"
      status: "Provisioning can proceed"
  when: ucs_fi_pre_provision_check_available_ports | int == ucs_fi_pre_provision_check_total_ports | int
